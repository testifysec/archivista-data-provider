apiVersion: witness.testifysec.com/v1alpha1
kind: Policy
metadata:
  labels:
    app.kubernetes.io/name: policy
    app.kubernetes.io/instance: policy-sample
    app.kubernetes.io/part-of: kubebuilder-init
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: kubebuilder-init
  name: policy-sample-fail
spec:
  policy: 
